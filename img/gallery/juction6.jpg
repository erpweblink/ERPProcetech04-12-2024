using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.tool.xml;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Net.Mail;
using System.Net.Mime;
using System.Security.Cryptography;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Admin_TaxInvoice : System.Web.UI.Page
{
    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString);

    DataTable Dt_Items = new DataTable();
    DataTable Dt_Mail = new DataTable();
    DataTable Dt_Itemsdetails = new DataTable();
    string ID;
    string chkupdate;
    string id = "";
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            TaxPanel3.Visible = false;
            TaxPanel2.Visible = false;
            TaxPanel1.Visible = false;

            this.txt_InvoiceDate.Text = DateTime.Now.ToString("yyyy-MM-dd");
            this.txt_InvoiceDate.TextMode = TextBoxMode.Date;
            this.txt_ChallanDate.Text = DateTime.Now.ToString("yyyy-MM-dd");
            this.txt_ChallanDate.TextMode = TextBoxMode.Date;
            //this.txt_poDate.Text = DateTime.Now.ToString("yyyy-MM-dd");
            //this.txt_poDate.TextMode = TextBoxMode.Date;
            ////purchasedescription grid view temp table
            ViewState["RowNo"] = 0;
            // Dt_Items.Columns.AddRange(new DataColumn[10] { new DataColumn("ID"), new DataColumn("JobNo"), new DataColumn("Description"), new DataColumn("HSN/SAC"), new DataColumn("Rate"), new DataColumn("Unit"), new DataColumn("Quntity"), new DataColumn("Tax"), new DataColumn("Discount"), new DataColumn("TotalAmount") });
            Dt_Items.Columns.AddRange(new DataColumn[12] { new DataColumn("Id"), new DataColumn("JobNo"), new DataColumn("MateName"), new DataColumn("Description"), new DataColumn("PrintDescription"), new DataColumn("HSN/SAC"), new DataColumn("Rate"), new DataColumn("Unit"), new DataColumn("Quntity"), new DataColumn("Tax"), new DataColumn("Discount"), new DataColumn("TotalAmount") });
            ViewState["Invoice"] = Dt_Items;

            //mail temprary table
            ViewState["RowNo"] = 0;
            Dt_Mail.Columns.AddRange(new DataColumn[2] { new DataColumn("mailid"), new DataColumn("mailtext") });
            ViewState["MULTMail"] = Dt_Mail;

            ///details gridview temprary table
            if (Request.QueryString["Id"] != null)
            {
                ID = Decrypt(Request.QueryString["Id"].ToString());
                hdnID.Value = ID;
                Load_Record();
                GetJobNO();
                //DataTable dt1 = new DataTable();
                //SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txtCompName.Text + "'", con);
                //sad1.Fill(dt1);
                //txt_KindAtt.DataTextField = "ContactPerName";
                //txt_KindAtt.DataSource = dt1;
                //txt_KindAtt.DataBind();
                //GenerateInvoice();
                //GenerateChallan();
            }
            else
            {
                GenerateInvoice();
                GenerateChallan();
            }
            if (Request.QueryString["InvoiceNo"] != null)
            {
                id = Decrypt(Request.QueryString["InvoiceNo"].ToString());
                ReportDataLoad();
                ReadOnlyReport();
            }

            //NEW CODE FOR FETCH THE QUOTATION DATA START
            //Edit Quotation
            if (Request.QueryString["QuatationNo"] != null)
            {
                Server.UrlDecode(Request.QueryString["QuatationNo"]);
                string ID = Server.UrlDecode(Request.QueryString["QuatationNo"]);

                //ID = Decrypt(Request.QueryString["QuatationNo"].ToString());
                ShowHeaderEdit(ID);
                ShowDtlEdit(ID);
                hidden.Value = ID;
            }

            if (Request.QueryString["ID"] != null)
            {
                //Idd = Decrypt(Request.QueryString["ID"].ToString());
                //ReportLoadData();
                //reportresdonly();
            }

            //NEW CODE FOR FETCH THE CustomerPO DATA 

            if (Request.QueryString["QuoNo"] != null)
            {
                ID = Decrypt(Request.QueryString["QuoNo"].ToString());

                ShowHeaderDtls(ID);
                ShowDtlDtls(ID);
                hidden.Value = ID;
            }
        }
    }

    protected void ddljobnobind()
    {
        try
        {
            DataTable dt = new DataTable();
            con.Open();
            SqlDataAdapter sad = new SqlDataAdapter("SELECT Id,JobNo FROM [tblInwardEntry] WHERE CustName = '" + txtCompName.Text + "' ", con);
            sad.Fill(dt);
            txt_jobno.DataSource = dt;
            txt_jobno.DataTextField = "JobNo";
            //txt_jobno.DataValueField = "Id";
            txt_jobno.DataBind();
            con.Close();
        }
        catch (Exception ex)
        {
            string errorMsg = "An error occurred : " + ex.Message;
            ScriptManager.RegisterStartupScript(this, this.GetType(), "alert", "alert('" + errorMsg + "') ", true);
        }
    }

    //NEW METHODS FOR QUOTATION DATA FETCH START
    protected void ShowHeaderEdit(string ID)
    {
        SqlDataAdapter Da = new SqlDataAdapter("SELECT * FROM [CustomerPO_Hdr] WHERE Quotationno='" + ID + "'", con);
        DataTable Dt = new DataTable();
        Da.Fill(Dt);
        if (Dt.Rows.Count > 0)
        {

            ddlagainst.Enabled = false;
            ddlagainstno.Enabled = false;
            ddlagainst.SelectedItem.Text = "Order";

            txtCompName.Text = Dt.Rows[0]["CustomerName"].ToString();

            txt_CompanyAddress.Text = Dt.Rows[0]["ShippingAddress"].ToString();

            txt_PoNo.Text = Dt.Rows[0]["Pono"].ToString();

            DateTime ffff18 = Convert.ToDateTime(Dt.Rows[0]["PoDate"].ToString());
            txt_poDate.Text = ffff18.ToString("yyyy-MM-dd");

            //  txt_mobile_no.Text = Dt.Rows[0]["Mobile_No"].ToString();
            //  txt_kind_att.Text = Dt.Rows[0]["kind_Att"].ToString();

            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');

            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[1].ToString();
            }
            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[1].ToString();
            }
            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[1].ToString();
            }
            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[1].ToString();
            }

            if (arrstr4.Length > 0)
            {
                txt_term_5.Text = arrstr4[0].ToString();
                txt_condition_5.Text = arrstr4[1].ToString();
            }
            if (arrstr5.Length > 0)
            {
                txt_term_6.Text = arrstr5[0].ToString();
                txt_condition_6.Text = arrstr5[1].ToString();
            }
        }

        SqlDataAdapter Daa = new SqlDataAdapter("SELECT * FROM [tblCustomer] WHERE CustomerName ='" + txtCompName.Text + "'", con);
        DataTable Dtt = new DataTable();
        Daa.Fill(Dtt);
        if (Dtt.Rows.Count > 0)
        {
            txt_CompanyPanNo.Text = Dtt.Rows[0]["PanNo"].ToString();
            txt_CompanyGSTno.Text = Dtt.Rows[0]["GSTNo"].ToString();
            txt_CompanyStateCode.Text = Dtt.Rows[0]["StateCode"].ToString();
        }


        SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM tblCustomerContactPerson WHERE CustName='" + txtCompName.Text + "'", con);
        DataTable Sdt = new DataTable();
        Sda.Fill(Sdt);
        Grd_MAIL.DataSource = Sdt;
        Grd_MAIL.DataBind();
    }

    protected void ShowDtlEdit(string ID)
    {
        ////Automatic description bind in job number from quaation details table
        DataTable dt3 = new DataTable();
        SqlDataAdapter sad3 = new SqlDataAdapter("select * from [CustomerPO_Dtls] where Quotationno='" + ID + "'", con);
        sad3.Fill(dt3);
        int count = 1;
        if (dt3.Rows.Count > 0)
        {
            ViewState["RowNo"] = 0;
            Dt_Itemsdetails.Columns.AddRange(new DataColumn[12] { new DataColumn("Id"),new DataColumn("JobNo"), new DataColumn("MateName"),
                    new DataColumn("Description"),  new DataColumn("PrintDescription"), new DataColumn("Hsn_Sac"),
                    new DataColumn("Rate"),  new DataColumn("Unit"),
                    new DataColumn("Quantity"),  new DataColumn("TaxPercenteage"),
                    new DataColumn("DiscountPercentage"), new DataColumn("Total")
                  });

            ViewState["Customerdetails"] = Dt_Itemsdetails;
            for (int i = 0; i < dt3.Rows.Count; i++)
            {
                Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["MateName"].ToString(), dt3.Rows[i]["Description"].ToString(), dt3.Rows[i]["PrintDescription"].ToString(), dt3.Rows[i]["Hsn_Sac"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Unit"].ToString(), dt3.Rows[i]["Quantity"].ToString(), dt3.Rows[i]["TaxPercenteage"].ToString(), dt3.Rows[i]["DiscountPercentage"].ToString(), dt3.Rows[i]["Total"].ToString());
                count = count + 1;
            }
            grd_getDTLS.DataSource = Dt_Itemsdetails;
            grd_getDTLS.DataBind();
            grd_getDTLS.EmptyDataText = "Not Records Found"; //9975468880         
        }


        SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM tbl_Quotation_Hdr WHERE Quotation_no='" + ID + "'", con);
        DataTable Sdt = new DataTable();
        Sda.Fill(Sdt);
        if (Sdt.Rows.Count > 0)
        {
            txt_cgst_amt.Text = Sdt.Rows[0]["CGST"].ToString();
            txt_sgst_amt.Text = Sdt.Rows[0]["SGST"].ToString();
            txt_grand_total.Text = Sdt.Rows[0]["AllTotal_price"].ToString();
        }
    }

    //NEW METHODS FOR QUOTATION DATA FETCH END


    //Bind Against No
    private void Fillddlagainstnumber()
    {
        SqlDataAdapter ad = new SqlDataAdapter("SELECT DISTINCT [AgainstNo] FROM [tbl_Invoice_both_hdr] ", con);
        DataTable dt = new DataTable();
        ad.Fill(dt);
        if (dt.Rows.Count > 0)
        {
            ddlagainstno.DataSource = dt;
            ddlagainstno.DataTextField = "AgainstNo";
            ddlagainstno.DataBind();
            ddlagainstno.Items.Insert(0, " ---  Select Type  --- ");
        }
    }

    protected void ReadOnlyReport()
    {
        tbl.Visible = false;
        btn_Cancel.Text = "Close";
        txt_InvoiceDate.ReadOnly = true;
        txt_InvoiceNo.ReadOnly = true;
        txt_ChallanDate.ReadOnly = true;
        txt_challanNo.ReadOnly = true;
        txt_poDate.ReadOnly = true;
        txt_PoNo.ReadOnly = true;
        txt_CompanyAddress.ReadOnly = true;
        txt_CustomerGstNo.ReadOnly = true;
        txt_CustomerPanNo.ReadOnly = true;
        txt_CustomerStateCode.ReadOnly = true;
        txt_CompanyStateCode.ReadOnly = true;
        txt_CompanyGSTno.ReadOnly = true;
        txt_CompanyPanNo.ReadOnly = true;
        txt_ShipingAdddesss.ReadOnly = true;
        txt_Payterm.ReadOnly = true;
        //txt_KindAtt.ReadOnly = true;
        //txt_Delivery.ReadOnly = true;
        drop_CompanyRegisterType.Enabled = false;
        drop_CustomerRagisterType.Enabled = false;
        check_address.Enabled = false;
        btn_save.Visible = false;
        //txt_gst_no.ReadOnly = true;
        //btn_save.Visible = false;
        gvPurchaseRecord.Columns[9].Visible = false;
        Grd_MAIL.Columns[2].Visible = false;
        headerreport.InnerText = " Invoice Report";
        mailcheck.Visible = false;
        //txtJobNo.ReadOnly = true;
        txtCompName.ReadOnly = true;
        txtCustName.ReadOnly = true;
        txt_term_1.ReadOnly = true;
        txt_term_2.ReadOnly = true;
        txt_term_3.ReadOnly = true;
        txt_term_4.ReadOnly = true;
        txt_condition_1.ReadOnly = true;
        txt_condition_2.ReadOnly = true;
        txt_condition_3.ReadOnly = true;
        txt_condition_4.ReadOnly = true;
        txt_condition_5.ReadOnly = true;
        txt_condition_6.ReadOnly = true;
    }

    protected void ReportDataLoad()
    {
        DataTable Dt = new DataTable();
        SqlDataAdapter da = new SqlDataAdapter("select * from vw_InvoiceReport where InvoiceNo='" + id + "'", con);
        da.Fill(Dt);

        if (Dt.Rows.Count > 0)
        {
            //btn_save.Text = "Update";
            txt_InvoiceNo.Text = Dt.Rows[0]["InvoiceNo"].ToString();
            DateTime ffff1 = Convert.ToDateTime(Dt.Rows[0]["InvoiceDate"].ToString());
            txt_InvoiceDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_challanNo.Text = Dt.Rows[0]["ChallanNo"].ToString();
            DateTime ffff2 = Convert.ToDateTime(Dt.Rows[0]["ChallanDate"].ToString());
            txt_ChallanDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_PoNo.Text = Dt.Rows[0]["PoNo"].ToString();
            DateTime ffff3 = Convert.ToDateTime(Dt.Rows[0]["PoDate"].ToString());
            txt_poDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_CompanyAddress.Text = Dt.Rows[0]["CompanyAddress"].ToString();
            txt_ShipingAdddesss.Text = Dt.Rows[0]["CustomerShippingAddress"].ToString();
            txt_CompanyGSTno.Text = Dt.Rows[0]["CompanyGstNo"].ToString();
            txt_CustomerGstNo.Text = Dt.Rows[0]["CustomerGstNo"].ToString();
            txt_CompanyPanNo.Text = Dt.Rows[0]["CompanyPanNo"].ToString();
            txt_CustomerPanNo.Text = Dt.Rows[0]["CustomerPanNo"].ToString();
            txt_CompanyStateCode.Text = Dt.Rows[0]["CompanyStateCode"].ToString();
            txt_CustomerStateCode.Text = Dt.Rows[0]["CustomerStateCode"].ToString();
            txt_Payterm.Text = Dt.Rows[0]["PayTerm"].ToString();

            // txt_Delivery.Text = Dt.Rows[0]["Delivery"].ToString();
            lbl_Amount_In_Word.Text = Dt.Rows[0]["TotalInWord"].ToString();
            txt_grand_total.Text = Dt.Rows[0]["GrandTotal"].ToString();
            txt_sgst_amt.Text = Dt.Rows[0]["SGST"].ToString();
            txt_cgst_amt.Text = Dt.Rows[0]["CGST"].ToString();
            txt_igst_amt.Text = Dt.Rows[0]["IGST"].ToString();
            // txtJobNo.Text = Dt.Rows[0]["JobNo"].ToString();
            txtCompName.Text = Dt.Rows[0]["CompName"].ToString();
            txtCustName.Text = Dt.Rows[0]["CustName"].ToString();
            drop_CompanyRegisterType.Text = Dt.Rows[0]["ComapyRegType"].ToString();
            drop_CustomerRagisterType.Text = Dt.Rows[0]["CustomerRegType"].ToString();
            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');

            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[0].ToString();
            }

            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[0].ToString();
            }

            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[0].ToString();
            }
            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[0].ToString();
            }
            if (arrstr4.Length > 0)
            {
                txt_term_5.Text = arrstr4[0].ToString();
                txt_condition_5.Text = arrstr3[0].ToString();
            }
            if (arrstr5.Length > 0)
            {
                txt_term_6.Text = arrstr5[0].ToString();
                txt_condition_6.Text = arrstr3[0].ToString();
            }

        }

        DataTable Dt_Product = new DataTable();
        SqlDataAdapter daa = new SqlDataAdapter("SELECT JobNo,Description,Hsn,Rate,Unit,Quntity,TaxPercentage,DiscountPercentage,Total FROM vw_InvoiceReport WHERE InvoiceNo='" + id + "'", con);
        da.Fill(Dt_Product);

        int Count = 1;
        if (Dt_Product.Rows.Count > 0)
        {
            if (Dt_Items.Columns.Count < 1)
            {
                ShowGrid();
            }

            for (int i = 0; i < Dt_Product.Rows.Count; i++)
            {
                Dt_Items.Rows.Add(Count, Dt_Product.Rows[i]["JobNo"].ToString(), Dt_Product.Rows[i]["Description"].ToString(), Dt_Product.Rows[i]["Hsn"].ToString(), Dt_Product.Rows[i]["Rate"].ToString(), Dt_Product.Rows[i]["Unit"].ToString(), Dt_Product.Rows[i]["Quntity"].ToString(), Dt_Product.Rows[i]["TaxPercentage"].ToString(), Dt_Product.Rows[i]["DiscountPercentage"].ToString(), Dt_Product.Rows[i]["Total"].ToString());
                Count = Count + 1;
            }
        }

        gvPurchaseRecord.DataSource = Dt_Items;
        gvPurchaseRecord.DataBind();

        SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM InvoiceMail WHERE InvoiceNo='" + txt_InvoiceNo.Text + "'", con);
        DataTable Sdt = new DataTable();
        Sda.Fill(Sdt);
        Grd_MAIL.DataSource = Sdt;
        Grd_MAIL.DataBind();
    }

    public string Decrypt(string cipherText)
    {
        string EncryptionKey = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        cipherText = cipherText.Replace(" ", "+");
        byte[] cipherBytes = Convert.FromBase64String(cipherText);
        using (Aes encryptor = Aes.Create())
        {
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] {
            0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76
        });
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateDecryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(cipherBytes, 0, cipherBytes.Length);
                    cs.Close();
                }
                cipherText = Encoding.Unicode.GetString(ms.ToArray());
            }
        }
        return cipherText;
    }


    protected void GenerateInvoice()
    {
        // Construct the SQL query to get the maximum invoice number
        string query = "SELECT MAX(CAST([InvoiceNo] AS INT)) AS maxid FROM [tbl_Invoice_both_hdr]";

        // Use parameterized query to prevent SQL injection
        using (SqlDataAdapter ad = new SqlDataAdapter(query, con))
        {
            DataTable dt = new DataTable();
            ad.Fill(dt);

            // Check if there is any record in the database
            if (dt.Rows.Count > 0)
            {
                int maxid = dt.Rows[0]["maxid"] == DBNull.Value ? 0 : Convert.ToInt32(dt.Rows[0]["maxid"]);

                // If a maxid was found, increment it, else start from 1
                if (maxid > 0)
                {
                    txt_InvoiceNo.Text = $"{(maxid + 1):D4}";  // Increment the invoice number and format it as 4 digits
                }
                else
                {
                    // If no records found, start with 0001
                    txt_InvoiceNo.Text = "0231";
                }
            }
            else
            {
                // If no records found, start with 0001
                txt_InvoiceNo.Text = "0001";
            }
        }
    }




    //protected void GenerateInvoice()
    //{
    //    // Get the current year
    //    int currentYear = DateTime.Now.Year;
    //    int lastTwoDigitsOfYear = currentYear % 100;

    //    // Construct the SQL query to get the maximum invoice ID for the current year
    //    string query = $"SELECT MAX([Id]) AS maxid FROM [tbl_Invoice_both_hdr] WHERE YEAR([InvoiceDate]) IN ({currentYear - 1}, {currentYear})";

    //    // Use parameterized query to prevent SQL injection
    //    using (SqlDataAdapter ad = new SqlDataAdapter(query, con))
    //    {
    //        DataTable dt = new DataTable();
    //        ad.Fill(dt);

    //        if (dt.Rows.Count > 0)
    //        {
    //            int maxid = dt.Rows[0]["maxid"] == DBNull.Value ? 0 : Convert.ToInt32(dt.Rows[0]["maxid"]);

    //            if (maxid > 0)
    //            {
    //                // If records found for the current or previous year, use the maximum ID + 1
    //                txt_InvoiceNo.Text = $"{currentYear - 1}-{lastTwoDigitsOfYear}/{maxid + 1:D4}";
    //            }
    //            else
    //            {
    //                // If no records found for the current or previous year, start with 1
    //                txt_InvoiceNo.Text = $"{currentYear - 1}-{lastTwoDigitsOfYear}/1";
    //            }
    //        }
    //        else
    //        {
    //            // If no records found for the current or previous year, start with 1
    //            txt_InvoiceNo.Text = $"{currentYear - 1}-{lastTwoDigitsOfYear}/1";
    //        }
    //    }
    //}

    //protected void GenerateInvoice()
    //{
    //    // Get the current year
    //    int currentYear = DateTime.Now.Year;

    //    // Construct the SQL query to get the maximum invoice ID for the current year
    //    string query = $"SELECT MAX([Id]) AS maxid FROM [tbl_Invoice_both_hdr] WHERE YEAR([InvoiceDate]) = {currentYear}";

    //    // Use parameterized query to prevent SQL injection
    //    using (SqlDataAdapter ad = new SqlDataAdapter(query, con))
    //    {
    //        DataTable dt = new DataTable();
    //        ad.Fill(dt);

    //        if (dt.Rows.Count > 0)
    //        {
    //            int maxid = dt.Rows[0]["maxid"] == DBNull.Value ? 0 : Convert.ToInt32(dt.Rows[0]["maxid"]);
    //            txt_InvoiceNo.Text = $"INV-{currentYear}-{maxid + 1}";
    //        }
    //        else
    //        {
    //            // If no records found for the current year, start with 1
    //            txt_InvoiceNo.Text = $"INV-{currentYear}-1";
    //        }
    //    }
    //}


    //protected void GenerateInvoice()
    //{
    //    SqlDataAdapter ad = new SqlDataAdapter("SELECT max([Id]) as maxid FROM [tbl_Invoice_both_hdr]", con);
    //    DataTable dt = new DataTable();
    //    ad.Fill(dt);
    //    if (dt.Rows.Count > 0)
    //    {
    //        int maxid = dt.Rows[0]["maxid"].ToString() == "" ? 0 : Convert.ToInt32(dt.Rows[0]["maxid"].ToString());
    //        txt_InvoiceNo.Text = "INV-" + (maxid + 1).ToString();
    //    }
    //    else
    //    {
    //        txt_InvoiceNo.Text = string.Empty;
    //    }
    //}

    protected void GenerateChallan()
    {
        SqlDataAdapter ad = new SqlDataAdapter("SELECT max([Id]) as maxid FROM [tbl_Invoice_both_hdr]", con);
        DataTable dt = new DataTable();
        ad.Fill(dt);
        if (dt.Rows.Count > 0)
        {
            int maxid = dt.Rows[0]["maxid"].ToString() == "" ? 0 : Convert.ToInt32(dt.Rows[0]["maxid"].ToString());
            txt_challanNo.Text = "CLN-" + (maxid + 1).ToString();
        }
        else
        {
            txt_challanNo.Text = string.Empty;
        }
    }

    private void Load_Record()
    {
        DataTable Dt = new DataTable();
        SqlDataAdapter da = new SqlDataAdapter("SELECT tbl_Invoice_both_Dtls.JobNo, tbl_Invoice_both_Dtls.MateName,tbl_Invoice_both_Dtls.PrintDescription,tbl_Invoice_both_hdr.InvoiceNo,tbl_Invoice_both_hdr.InvoiceAgainst,tbl_Invoice_both_hdr.AgainstNo,InvoiceDate,tbl_Invoice_both_hdr.JobNo,tbl_Invoice_both_hdr.CompName,tbl_Invoice_both_hdr.CustName,PoNo,PoDate,ChallanNo,ChallanDate,PayTerm,Delivery,KindAtt,CompanyAddress,CompanyGstNo,CompanyPanNo, ComapyRegType, CompanyStateCode, CustomerShippingAddress, CustomerGstNo,Term_Condition_1,Term_Condition_2,Term_Condition_3,Term_Condition_4,Term_Condition_5,Term_Condition_6, CustomerPanNo, CustomerRegType,CustomerStateCode, CGST, SGST,IGST, AllTotalAmount, GrandTotal, TotalInWord, Description, Hsn, TaxPercentage, Quntity, Unit, Rate, DiscountPercentage, Total FROM tbl_Invoice_both_hdr INNER JOIN tbl_Invoice_both_Dtls ON tbl_Invoice_both_Dtls.InvoiceId = tbl_Invoice_both_hdr.Id WHERE tbl_Invoice_both_hdr.Id='" + hdnID.Value + "'", con);
        da.Fill(Dt);

        if (Dt.Rows.Count > 0)
        {
            ddlagainst.Enabled = false;
            ddlagainstno.Enabled = false;

            btn_save.Text = "Update";
            txt_InvoiceNo.Text = Dt.Rows[0]["InvoiceNo"].ToString();
            ddlagainst.SelectedItem.Text = Dt.Rows[0]["InvoiceAgainst"].ToString();
            Fillddlagainstnumber();
            ddlagainstno.SelectedItem.Text = Dt.Rows[0]["AgainstNo"].ToString();
            txtCompName.Text = Dt.Rows[0]["CompName"].ToString();
            txtCustName.Text = Dt.Rows[0]["CustName"].ToString();
            DateTime ffff1 = Convert.ToDateTime(Dt.Rows[0]["InvoiceDate"].ToString());
            txt_InvoiceDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_challanNo.Text = Dt.Rows[0]["ChallanNo"].ToString();
            DateTime ffff2 = Convert.ToDateTime(Dt.Rows[0]["ChallanDate"].ToString());
            txt_ChallanDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_PoNo.Text = Dt.Rows[0]["PoNo"].ToString();
            DateTime ffff3 = Convert.ToDateTime(Dt.Rows[0]["PoDate"].ToString());
            txt_poDate.Text = ffff1.ToString("yyyy-MM-dd");
            txt_CompanyAddress.Text = Dt.Rows[0]["CompanyAddress"].ToString();
            txt_ShipingAdddesss.Text = Dt.Rows[0]["CustomerShippingAddress"].ToString();
            txt_CompanyGSTno.Text = Dt.Rows[0]["CompanyGstNo"].ToString();
            txt_CustomerGstNo.Text = Dt.Rows[0]["CustomerGstNo"].ToString();
            txt_CompanyPanNo.Text = Dt.Rows[0]["CompanyPanNo"].ToString();
            txt_CustomerPanNo.Text = Dt.Rows[0]["CustomerPanNo"].ToString();
            txt_CompanyStateCode.Text = Dt.Rows[0]["CompanyStateCode"].ToString();
            txt_CustomerStateCode.Text = Dt.Rows[0]["CustomerStateCode"].ToString();
            txt_Payterm.Text = Dt.Rows[0]["PayTerm"].ToString();
            txt_KindAtt.Text = Dt.Rows[0]["KindAtt"].ToString();
            //  txt_Delivery.Text = Dt.Rows[0]["Delivery"].ToString();
            lbl_Amount_In_Word.Text = Dt.Rows[0]["TotalInWord"].ToString();
            txt_grand_total.Text = Dt.Rows[0]["GrandTotal"].ToString();
            txt_sgst_amt.Text = Dt.Rows[0]["SGST"].ToString();
            txt_cgst_amt.Text = Dt.Rows[0]["CGST"].ToString();
            txt_igst_amt.Text = Dt.Rows[0]["IGST"].ToString();

            drop_CompanyRegisterType.Text = Dt.Rows[0]["ComapyRegType"].ToString();
            drop_CustomerRagisterType.Text = Dt.Rows[0]["CustomerRegType"].ToString();

            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');
            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[1].ToString();
            }

            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[1].ToString();
            }

            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[1].ToString();
            }

            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[1].ToString();
            }
            if (arrstr4.Length > 0)
            {
                txt_term_5.Text = arrstr4[0].ToString();
                txt_condition_5.Text = arrstr4[1].ToString();
            }
            if (arrstr5.Length > 0)
            {
                txt_term_6.Text = arrstr5[0].ToString();
                txt_condition_6.Text = arrstr5[1].ToString();
            }
        }
        DataTable Dt_Product = new DataTable();
        SqlDataAdapter daa = new SqlDataAdapter("SELECT  JobNo,Description,Hsn,Rate,Unit,Quntity,TaxPercentage,DiscountPercentage,Total FROM tbl_Invoice_both_Dtls WHERE tbl_Invoice_both_hdr.Id='" + hdnID.Value + "'", con);
        da.Fill(Dt_Product);

        int Count = 1;
        if (Dt_Product.Rows.Count > 0)
        {
            if (Dt_Items.Columns.